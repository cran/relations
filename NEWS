Changes in 0.5-3:
 
  o Adjust for recent changes in package 'clue'.

Changes in 0.5-2:

  o Sparse lightweight array and matrix code moved to package 'slam'.

Changes in 0.5-1:

  o Rd fixes.

Changes in 0.5:

  o New relation_consensus() method for Cook-Kress-Seiford (CKS)
    dissimilarity.

  o New SD fitters for consensus preorders, and family 'G' for general
    crisp endorelations.

  o Performance enhancements for finding all SD consensus solutions, and
    SD consensus for equivalences or weak orders with a given number of
    classes.

  o relation_choice() gains a method for CKS dissimilarity, and a
    'weights' argument.

  o Performance enhancements for SD choice via employing a more compact
    linearization of the underlying binary quadratic program (BQP).

  o GLPK is now used as the default MILP solver.

  o Consensus and choice fitters now use sparse constraint matrices by
    default.

  o New class for representing rankings.

  o Improvements for plotting relations and relation ensembles.
    
  o New function relation_cover() for computing the covering relation of
    an endorelation.

  o New function relation_trace() for computing the left or right trace
    of an endorelation.

  o New simple choice function relation_elements() for determining the
    minimal, first, last or maximal elements of an endorelation.

  o New predicate relation_is_quasitransitive().


Changes in 0.4:

  o SD fitters can now use the GLPK, SYMPHONY and CPLEX solvers in
    addition to lp_solve, and optionally use sparse constraint matrices

  o more methods added to relation_violations().
    optionally, return all tuples violating a property.

  o relation_scores() now also works for relation ensembles

  o [tansitive,reflexive]_[closure,reduction]() are now available as
    methods for closure and reduction generics (provided by sets)

  o During creation of relations, domains are converted to sets and
    incidences are canonicalized to match the internal order of the domain

  o relation_consensus() can now compute all solutions for the Condorcet
    method, and gains a 'majority' method

  o subassignment method for ensembles added

  o set_intersection() accepts any number of arguments

  o as.relation() generic now has a ... argument

  o the 'attrs' argument in plot.relation_ensemble() is now a list, so
    that the Rgraphviz parameters can be changed in each plot
    individually

  o all.equal() methods added for relations and ensembles


Changes in 0.3:

  o rank method is default for relation_scores()

  o the relations in the SVM Benchmark data are now all reflexive

  o support for sets moved to separate 'sets' package

  o support for fuzzy relations added

  o fitters can now use a sparse constraint matrix representation

  o new SD fitters for the S ("symmetric") and M ("matches") families

  o relations are now subsettable

  o fitters for Cook-Seiford method and Euclidean consensus added

  o new summary() method for relations which computes all implemented
    predicates

  o relation_choice() for choosing "winner" objects based on an ensemble
    of relations between these


Changes in 0.2:

  o Copeland's method added to relation_consensus()

  o relation_classes() added to extract and pretty-print
    (ordered) classes from preferences and equivalences.

  o relation_violations() added to compute a measure of remoteness from a
    specified property (e.g., symmetry, transitivity, etc.)

  o set_symdiff() fixed for more than two elements (used to compute 
    the complement of the union and the intersection of a set, which is
    wrong in general). Now, the argument list is treated recursively.

  o Vignette added

  o New SD fitter added for the C ("complete") and A ("antisymmetric") 
    families of relations

  o Summary methods for tuples and sets added

  o Ops and t() methods for the relation_ensemble class added

  o plot.relation() fixed 
    (used to plot the dual, now changes the graphviz layout)

  o Ops.tuple() now correctly handles unary operators, and preserves class

  o transform_incidences() added for transforming incidence matrices of
    endorelations from/to other codings found in literature

Changes in 0.1:

  o Initial release
